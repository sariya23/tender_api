version: '3.9'
services:
  db:
    image: postgres:16
    env_file: "./docker.env"
    restart: "always"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTRGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  
  migration:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTRGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "until pg_isready -h db -p ${POSTGRES_PORT}; do sleep 1; done; make ENV=docker migrate"
  
  app:
    build:
      dockerfile: Dockerfile
      context: .
      target: dev
    env_file: "./docker.env"
    restart: "always"
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:${SERVER_PORT}/api/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    command: make ENV=docker run